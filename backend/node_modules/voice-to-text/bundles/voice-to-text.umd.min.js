!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("rxjs/Observable"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define("voice-to-text",["exports","@angular/core","rxjs/Observable","@angular/common","@angular/forms"],n):n(e["voice-to-text"]={},e.ng.core,e.Rx,e.ng.common,e.ng.forms)}(this,function(e,n,t,i,o){"use strict";var r=function(){function e(e){var n=this;this.zone=e,this.stop=function(){n.speechRecognition.stop()}}return e.prototype.record=function(){var r=this;return t.Observable.create(function(o){var e=window.webkitSpeechRecognition;r.speechRecognition=new e,r.speechRecognition.continuous=!0,r.speechRecognition.lang="en-us",r.speechRecognition.maxAlternatives=1,r.speechRecognition.onresult=function(e){var n="";if(e.results){var t=e.results[e.resultIndex],i=t[0].transcript;t.isFinal&&(t[0].confidence<.3?console.log("Unrecognized result - Please try again"):n=i)}r.zone.run(function(){o.next(n)})},r.speechRecognition.onerror=function(e){o.error(e)},r.speechRecognition.onend=function(){o.complete()},r.speechRecognition.start()})},e}();r.decorators=[{type:n.Injectable}],r.ctorParameters=function(){return[{type:n.NgZone}]};var s=function(){function e(e){this.speech=e,this.search_text="",this.blink=!1,this.spokenText=new n.EventEmitter,this.error=new n.EventEmitter,this.showInput=!0}return e.prototype.ngOnInit=function(){},e.prototype.triggerMike=function(){"webkitSpeechRecognition"in window?(this.search_text="",this.blink=!0,this.search()):console.log("please upgrade")},e.prototype.search=function(){var n=this;this.speech.record().subscribe(function(e){n.search_text=e,n.blink=!1,n.spokenText.emit(n.search_text),n.speech.stop()},function(e){n.error.emit("Failed in Fetching"),"no-speech"===e.error&&n.search()})},e}();s.decorators=[{type:n.Component,args:[{selector:"app-input",template:'<div>\n  <ng-content></ng-content>\n  <div\n    class="boxHolder"\n  >\n    <input\n      *ngIf="showInput"\n      [(ngModel)]="search_text"\n      class="inputBox"\n      autofocus\n    />\n    <div\n      [ngClass]="showInput ? \'indicator\' : \'floatingIndicator\'"\n    >\n      <img\n        class="mike"\n        (click)="triggerMike()"\n        src="assets/mike.png"\n      />\n      <div class="spinner" *ngIf="blink"></div>\n    </div>\n  </div>\n</div>\n',styles:["@-webkit-keyframes spin{from{opacity:0}to{opacity:.9}}@keyframes spin{from{opacity:0}to{opacity:.9}}.spinner{width:25px;height:25px;border-radius:100%;background-color:red;-webkit-animation-name:spin;animation-name:spin;-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:linear;animation-timing-function:linear}.inputBox{height:35px;line-height:25px;padding:5px;border-radius:4px;border:1px solid #d8d8d8;display:inline-block;width:95%;font-size:1rem}.boxHolder{position:relative}.indicator{position:absolute;top:10px;right:60px;display:-webkit-box;display:-ms-flexbox;display:flex}.indicator>.mike{width:20px;height:20px;position:relative}.indicator>.spinner{position:absolute;top:-1px;right:-3px}.floatingIndicator>.mike{width:20px;height:20px;position:relative}.floatingIndicator>.spinner{position:absolute;top:-1px;left:-3px}"]}]}],s.ctorParameters=function(){return[{type:r}]},s.propDecorators={spokenText:[{type:n.Output}],error:[{type:n.Output}],showInput:[{type:n.Input}]};var a=function(){};a.decorators=[{type:n.NgModule,args:[{imports:[i.CommonModule,o.FormsModule],declarations:[s],exports:[s],providers:[r]}]}],e.InputModule=a,e.ɵa=s,e.ɵb=r,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=voice-to-text.umd.min.js.map
